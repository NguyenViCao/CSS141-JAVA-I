package Project1;

import java.awt.Color;
import java.awt.Toolkit;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*<pre>
* @author           <i>Nguyen Vi Cao</i>
* Project Number    1
* Due date          10/12/2020
*</pre>
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*<pre>
* Class         RegularPolygons
* File          RegularPolygons.java
* Description   Examine via some calculations and formulas the relationship 
*               between regular polygons and circles.
* @author       <i>Nguyen Vi Cao</i>
* Environment   PC, Windows 10, jdk1.8.0_241, NetBeans 11.3
* Date          10/12/2020
* @version      1.0.0
* @see          javx.swing.frame
* History Log:  10/12/2020
*</pre>
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

public class RegularPolygons extends javax.swing.JFrame 
{
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *<pre>
 * Constructor      RegularPolygons()--default constructor
 * Description      Create a GUI form and displayed it centered with icon and
 *                  calculateJButton set as default, and also set
 *                  background color
 * @author          <i>Nguyen Vi Cao</i>
 * Date             09/30/2020
 *</pre>
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    
    public RegularPolygons() 
    {
        initComponents();   //build the form
        // set calculateJButton as default
        this.getRootPane().setDefaultButton(CalculateJButton);
        // set icon form
        this.setIconImage(Toolkit.getDefaultToolkit().
                getImage("src/Project1/Polygon-tool-icon.png"));
        // center the form at start
        this.setLocationRelativeTo(null);
        // set cursor in NumberOfSidesJTextField
        NumberOfSidesJTextField.requestFocus();
        // change background color
        this.getContentPane().setBackground(Color.LIGHT_GRAY);
        setDate();          //call a method to set date in title of the form
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        setDate()
    * Description   Display current date in mm/dd/yyy format in title 
    * @see          java.text.format
    * @see          java.text.SimpleDateFormat
    * @see          java.util.Date
    * Date          10/12/2020
    * History Log   10/12/2020
    * @author       <i>Nguyen Vi Cao</i>	
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void setDate()
    {
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        Date now = new Date();
        this.setTitle("Regular Polygons--" + dateFormat.format(now));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RegularPlygonsImageJLabel = new javax.swing.JLabel();
        RegularPolygonsJLabel = new javax.swing.JLabel();
        NumberOfSidesJLabel = new javax.swing.JLabel();
        NumberOfSidesJTextField = new javax.swing.JTextField();
        LengthOfEachSideJLabel = new javax.swing.JLabel();
        LengthOfEachSideJTextField = new javax.swing.JTextField();
        MeasureOfInteriorAngleJLabel = new javax.swing.JLabel();
        MeasureOfInteriorAngleJTextField = new javax.swing.JTextField();
        CircumradiusJLabel = new javax.swing.JLabel();
        CircumradiusJTextField = new javax.swing.JTextField();
        ApothemJLabel = new javax.swing.JLabel();
        ApothemJTextField = new javax.swing.JTextField();
        PerimeterOfPolygonJLabel = new javax.swing.JLabel();
        PerimeterOfPolygonJTextField = new javax.swing.JTextField();
        AreaOfPolygonJLabel = new javax.swing.JLabel();
        AreaOfPolygonJTextField = new javax.swing.JTextField();
        CircumferenceOfCircumcircleJLabel = new javax.swing.JLabel();
        CircumferenceOfCircumcircleJTextField = new javax.swing.JTextField();
        AreaOfCircumcircleJLabel = new javax.swing.JLabel();
        AreaOfCircumcircleJTextField = new javax.swing.JTextField();
        ErrorInPerimeterJLabel = new javax.swing.JLabel();
        ErrorInPerimeterJTextField = new javax.swing.JTextField();
        CentralAngleJLabel = new javax.swing.JLabel();
        CentralAngleJTextField = new javax.swing.JTextField();
        NumberOfDistinctDiagonalsJLabel = new javax.swing.JLabel();
        NumberOfDistinctDiagonalsJTextField = new javax.swing.JTextField();
        CalculateJButton = new javax.swing.JButton();
        ClearJButton = new javax.swing.JButton();
        PrintJButton = new javax.swing.JButton();
        QuitJButton = new javax.swing.JButton();
        JMenuBar = new javax.swing.JMenuBar();
        FileJMenu = new javax.swing.JMenu();
        ClearJMenuItem = new javax.swing.JMenuItem();
        PrintJMenuItem = new javax.swing.JMenuItem();
        QuitJMenuItem = new javax.swing.JMenuItem();
        HelpJMenu = new javax.swing.JMenu();
        AboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Project1 -- Regular Polygons");
        setBackground(new java.awt.Color(102, 102, 102));
        setPreferredSize(new java.awt.Dimension(618, 2000));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(15, 4, 4, 4));

        RegularPlygonsImageJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project1/images.png"))); // NOI18N
        getContentPane().add(RegularPlygonsImageJLabel);

        RegularPolygonsJLabel.setFont(new java.awt.Font("Century Gothic", 3, 20)); // NOI18N
        RegularPolygonsJLabel.setText("Regular Polygons");
        getContentPane().add(RegularPolygonsJLabel);

        NumberOfSidesJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NumberOfSidesJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NumberOfSidesJLabel.setText("Number Of Sides");
        getContentPane().add(NumberOfSidesJLabel);

        NumberOfSidesJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(NumberOfSidesJTextField);

        LengthOfEachSideJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LengthOfEachSideJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LengthOfEachSideJLabel.setText("Length of each side");
        getContentPane().add(LengthOfEachSideJLabel);

        LengthOfEachSideJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(LengthOfEachSideJTextField);

        MeasureOfInteriorAngleJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MeasureOfInteriorAngleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MeasureOfInteriorAngleJLabel.setText("Measure of interior angle");
        getContentPane().add(MeasureOfInteriorAngleJLabel);

        MeasureOfInteriorAngleJTextField.setEditable(false);
        MeasureOfInteriorAngleJTextField.setBackground(new java.awt.Color(255, 204, 0));
        MeasureOfInteriorAngleJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(MeasureOfInteriorAngleJTextField);

        CircumradiusJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CircumradiusJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircumradiusJLabel.setText("Circumradius");
        getContentPane().add(CircumradiusJLabel);

        CircumradiusJTextField.setEditable(false);
        CircumradiusJTextField.setBackground(new java.awt.Color(255, 204, 0));
        CircumradiusJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(CircumradiusJTextField);

        ApothemJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ApothemJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ApothemJLabel.setText("Apothem");
        getContentPane().add(ApothemJLabel);

        ApothemJTextField.setEditable(false);
        ApothemJTextField.setBackground(new java.awt.Color(255, 204, 0));
        ApothemJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(ApothemJTextField);

        PerimeterOfPolygonJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PerimeterOfPolygonJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PerimeterOfPolygonJLabel.setText("Perimeter of polygon");
        getContentPane().add(PerimeterOfPolygonJLabel);

        PerimeterOfPolygonJTextField.setEditable(false);
        PerimeterOfPolygonJTextField.setBackground(new java.awt.Color(255, 204, 0));
        PerimeterOfPolygonJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(PerimeterOfPolygonJTextField);

        AreaOfPolygonJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AreaOfPolygonJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AreaOfPolygonJLabel.setText("Area of polygon");
        getContentPane().add(AreaOfPolygonJLabel);

        AreaOfPolygonJTextField.setEditable(false);
        AreaOfPolygonJTextField.setBackground(new java.awt.Color(255, 204, 0));
        AreaOfPolygonJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(AreaOfPolygonJTextField);

        CircumferenceOfCircumcircleJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CircumferenceOfCircumcircleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CircumferenceOfCircumcircleJLabel.setText("Circumference of circumcircle");
        getContentPane().add(CircumferenceOfCircumcircleJLabel);

        CircumferenceOfCircumcircleJTextField.setEditable(false);
        CircumferenceOfCircumcircleJTextField.setBackground(new java.awt.Color(255, 204, 0));
        CircumferenceOfCircumcircleJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(CircumferenceOfCircumcircleJTextField);

        AreaOfCircumcircleJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AreaOfCircumcircleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AreaOfCircumcircleJLabel.setText("Area of circumcircle");
        getContentPane().add(AreaOfCircumcircleJLabel);

        AreaOfCircumcircleJTextField.setEditable(false);
        AreaOfCircumcircleJTextField.setBackground(new java.awt.Color(255, 204, 0));
        AreaOfCircumcircleJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(AreaOfCircumcircleJTextField);

        ErrorInPerimeterJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ErrorInPerimeterJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ErrorInPerimeterJLabel.setText("% Error In perimeter");
        getContentPane().add(ErrorInPerimeterJLabel);

        ErrorInPerimeterJTextField.setEditable(false);
        ErrorInPerimeterJTextField.setBackground(new java.awt.Color(255, 204, 0));
        ErrorInPerimeterJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(ErrorInPerimeterJTextField);

        CentralAngleJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CentralAngleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CentralAngleJLabel.setText("Central angle");
        getContentPane().add(CentralAngleJLabel);

        CentralAngleJTextField.setEditable(false);
        CentralAngleJTextField.setBackground(new java.awt.Color(255, 204, 0));
        CentralAngleJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(CentralAngleJTextField);

        NumberOfDistinctDiagonalsJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NumberOfDistinctDiagonalsJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NumberOfDistinctDiagonalsJLabel.setText("Number of distinct diagonals");
        getContentPane().add(NumberOfDistinctDiagonalsJLabel);

        NumberOfDistinctDiagonalsJTextField.setEditable(false);
        NumberOfDistinctDiagonalsJTextField.setBackground(new java.awt.Color(255, 204, 0));
        NumberOfDistinctDiagonalsJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(NumberOfDistinctDiagonalsJTextField);

        CalculateJButton.setBackground(new java.awt.Color(153, 153, 0));
        CalculateJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CalculateJButton.setMnemonic('c');
        CalculateJButton.setText("Calculate");
        CalculateJButton.setToolTipText("");
        CalculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateJButtonActionPerformed(evt);
            }
        });
        getContentPane().add(CalculateJButton);

        ClearJButton.setBackground(new java.awt.Color(153, 153, 0));
        ClearJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ClearJButton.setMnemonic('r');
        ClearJButton.setText("Clear");
        ClearJButton.setToolTipText("Clear the form");
        ClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearJButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ClearJButton);

        PrintJButton.setBackground(new java.awt.Color(153, 153, 0));
        PrintJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PrintJButton.setMnemonic('p');
        PrintJButton.setText("Print");
        PrintJButton.setToolTipText("Print the form as GUI");
        PrintJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintJButtonActionPerformed(evt);
            }
        });
        getContentPane().add(PrintJButton);

        QuitJButton.setBackground(new java.awt.Color(153, 153, 0));
        QuitJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        QuitJButton.setMnemonic('q');
        QuitJButton.setText("Quit");
        QuitJButton.setToolTipText("Exit");
        QuitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitJButtonActionPerformed(evt);
            }
        });
        getContentPane().add(QuitJButton);

        FileJMenu.setMnemonic('f');
        FileJMenu.setText("File");

        ClearJMenuItem.setMnemonic('r');
        ClearJMenuItem.setText("Clear");
        ClearJMenuItem.setToolTipText("Clear the form");
        ClearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(ClearJMenuItem);

        PrintJMenuItem.setMnemonic('p');
        PrintJMenuItem.setText("Print Form");
        PrintJMenuItem.setToolTipText("Print the form as GUI");
        PrintJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(PrintJMenuItem);

        QuitJMenuItem.setMnemonic('q');
        QuitJMenuItem.setText("Quit");
        QuitJMenuItem.setToolTipText("Exit");
        QuitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(QuitJMenuItem);

        JMenuBar.add(FileJMenu);

        HelpJMenu.setMnemonic('h');
        HelpJMenu.setText("Help");

        AboutJMenuItem.setMnemonic('a');
        AboutJMenuItem.setText("About");
        AboutJMenuItem.setToolTipText("Show about form");
        AboutJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutJMenuItemActionPerformed(evt);
            }
        });
        HelpJMenu.add(AboutJMenuItem);

        JMenuBar.add(HelpJMenu);

        setJMenuBar(JMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          PrintJMenuItemActionPerformed()
    *	Description     Print the GUI.
    *	Date            10/12/2020
    *   History Log     10/12/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void PrintJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintJMenuItemActionPerformed
        PrintUtilities.printComponent(this);
    }//GEN-LAST:event_PrintJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          clearJButtonActionPerformed()
    *	Description     Clears the form and resets it to its original state.
    *	Date            10/12/2020
    *   History Log     10/12/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void ClearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearJMenuItemActionPerformed
        NumberOfSidesJTextField.setText("");
        LengthOfEachSideJTextField.setText("");
        MeasureOfInteriorAngleJTextField.setText("");
        CircumradiusJTextField.setText("");
        ApothemJTextField.setText("");
        PerimeterOfPolygonJTextField.setText("");
        AreaOfPolygonJTextField.setText("");
        CircumferenceOfCircumcircleJTextField.setText("");
        AreaOfCircumcircleJTextField.setText("");
        ErrorInPerimeterJTextField.setText("");
        CentralAngleJTextField.setText("");
        NumberOfDistinctDiagonalsJTextField.setText("");
        NumberOfSidesJTextField.requestFocus();
    }//GEN-LAST:event_ClearJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        quitJButtonActionPerformed()
    * Description   Ends the application.
    * Date          10/12/2020
    * History Log   10/12/2020
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void QuitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitJMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_QuitJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        AboutJMenuItemActionPerformed()
    * Description   Creates and shows the About form
    * Date          10/12/2020
    * History Log   10/12/2020	
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    * @see          java.awt.event.ActionEvent
    * @see          java.text.DecimalFormat
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void AboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutJMenuItemActionPerformed
        About myAbout = new About(this, true);
        myAbout.setVisible(true);
    }//GEN-LAST:event_AboutJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        calculateJButtonActionPerformed()
    * Description   Calculate the relationship between regular 
    *               polygons and circles.
    * Date          10/12/2020
    * History Log   10/12/2020	
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    * @see          java.awt.event.ActionEvent
    * @see          java.text.DecimalFormat
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void CalculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateJButtonActionPerformed
        Scanner input = new Scanner(System.in);
        // Calculate the polygon
        final double MAX_LENGTH_OF_SIDE = 1000000000;
        String errorMessage = "Please enter a positive number for all required fields "
        + "\n length of each side must be in range (0," + MAX_LENGTH_OF_SIDE +"]";
        boolean invalidLengthOfEachSide = true;
        try
        {
            // get inputs
            int NumberOfSides = Integer.parseInt(NumberOfSidesJTextField.getText());
            double LengthOfEachSide = Double.parseDouble(LengthOfEachSideJTextField.getText());
            invalidLengthOfEachSide = LengthOfEachSide <= 0 || LengthOfEachSide > MAX_LENGTH_OF_SIDE;

            boolean invalidInput = invalidLengthOfEachSide;
            if (invalidInput)
            throw new NumberFormatException();
            else
            {
                // Calculate using formula
                // Calculate the interior angle
                double MeasureOfInteriorAngle = (NumberOfSides - 2) * 180/NumberOfSides;
                // Calculate the circumradius
                double Circumradius = LengthOfEachSide / (2 * Math.sin(Math.PI/NumberOfSides));
                // Calculate the apothem
                double Apothem = LengthOfEachSide / (2 * Math.tan(Math.PI/NumberOfSides));
                // Calculate the perimeter
                double PerimeterOfPolygon = LengthOfEachSide * NumberOfSides;
                // Calculate the area
                double AreaOfPolygon = NumberOfSides * Math.pow(Apothem, 2) * Math.tan(Math.PI/NumberOfSides);
                // Calculate the circumference of circumcircle
                double CircumferenceOfCircumcircle = 2 * Math.PI * Math.pow(Circumradius, 2);
                // Calculate the area of circumcircle
                double AreaOfCircumcircle = Math.PI * Circumradius;
                // Calculate the percent error in perimeter
                double ErrorInPerimeter = (Math.abs(CircumferenceOfCircumcircle - PerimeterOfPolygon)) / CircumferenceOfCircumcircle * 100;
                // Calculate the central angle of a regular polygon
                double CentralAngle = 360 / NumberOfSides;
                // Calculate the number of distinct diagonals
                double NumberOfDistinctDiagonals = NumberOfSides * (NumberOfSides - 3)/2;
                
                //Display results
                MeasureOfInteriorAngleJTextField.setText(String.valueOf(MeasureOfInteriorAngle + "\u00B0"));
                CircumradiusJTextField.setText(String.valueOf(Circumradius));
                ApothemJTextField.setText(String.valueOf(Apothem));
                PerimeterOfPolygonJTextField.setText(String.valueOf(PerimeterOfPolygon));
                AreaOfPolygonJTextField.setText(String.valueOf(AreaOfPolygon));
                CircumferenceOfCircumcircleJTextField.setText(String.valueOf(CircumferenceOfCircumcircle));
                AreaOfCircumcircleJTextField.setText(String.valueOf(AreaOfCircumcircle));
                ErrorInPerimeterJTextField.setText(String.valueOf(ErrorInPerimeter + "%"));
                CentralAngleJTextField.setText(String.valueOf(CentralAngle + "\u00B0"));
                NumberOfDistinctDiagonalsJTextField.setText(String.valueOf(NumberOfDistinctDiagonals));
            }
        }
        catch (NumberFormatException nume)
        {
            JOptionPane.showMessageDialog(null,errorMessage,
                    "Input Error", JOptionPane.WARNING_MESSAGE);
            // LengthOfEachSideJTextField.requestFocus();
            if (invalidLengthOfEachSide)
            {
                LengthOfEachSideJTextField.requestFocus();
                LengthOfEachSideJTextField.selectAll();
            }
        }

    }//GEN-LAST:event_CalculateJButtonActionPerformed

        /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          clearJButtonActionPerformed()
    *	Description     Clears the form and resets it to its original state.
    *	Date            9/30/2020
    *   History Log     9/30/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void ClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearJButtonActionPerformed
        NumberOfSidesJTextField.setText("");
        LengthOfEachSideJTextField.setText("");
        MeasureOfInteriorAngleJTextField.setText("");
        CircumradiusJTextField.setText("");
        ApothemJTextField.setText("");
        PerimeterOfPolygonJTextField.setText("");
        AreaOfPolygonJTextField.setText("");
        CircumferenceOfCircumcircleJTextField.setText("");
        AreaOfCircumcircleJTextField.setText("");
        ErrorInPerimeterJTextField.setText("");
        CentralAngleJTextField.setText("");
        NumberOfDistinctDiagonalsJTextField.setText("");
        NumberOfSidesJTextField.requestFocus();
    }//GEN-LAST:event_ClearJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          PrintJMenuItemActionPerformed()
    *	Description     Print the GUI.
    *	Date            10/12/2020
    *   History Log     10/12/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void PrintJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintJButtonActionPerformed
        PrintUtilities.printComponent(this);
    }//GEN-LAST:event_PrintJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        quitJButtonActionPerformed()
    * Description   Ends the application.
    * Date          10/12/2020
    * History Log   10/12/2020
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void QuitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitJButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_QuitJButtonActionPerformed

   /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *<pre>
 * Method       main()
 * Description  Invokes default constructor to create an instance of
 *              the form
 * @param       args are the command line strings
 * @author      <i>Nguyen Vi Cao</i>
 * Date         10/12/2020
 *</pre>
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegularPolygons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegularPolygons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegularPolygons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegularPolygons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegularPolygons().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutJMenuItem;
    private javax.swing.JLabel ApothemJLabel;
    private javax.swing.JTextField ApothemJTextField;
    private javax.swing.JLabel AreaOfCircumcircleJLabel;
    private javax.swing.JTextField AreaOfCircumcircleJTextField;
    private javax.swing.JLabel AreaOfPolygonJLabel;
    private javax.swing.JTextField AreaOfPolygonJTextField;
    private javax.swing.JButton CalculateJButton;
    private javax.swing.JLabel CentralAngleJLabel;
    private javax.swing.JTextField CentralAngleJTextField;
    private javax.swing.JLabel CircumferenceOfCircumcircleJLabel;
    private javax.swing.JTextField CircumferenceOfCircumcircleJTextField;
    private javax.swing.JLabel CircumradiusJLabel;
    private javax.swing.JTextField CircumradiusJTextField;
    private javax.swing.JButton ClearJButton;
    private javax.swing.JMenuItem ClearJMenuItem;
    private javax.swing.JLabel ErrorInPerimeterJLabel;
    private javax.swing.JTextField ErrorInPerimeterJTextField;
    private javax.swing.JMenu FileJMenu;
    private javax.swing.JMenu HelpJMenu;
    private javax.swing.JMenuBar JMenuBar;
    private javax.swing.JLabel LengthOfEachSideJLabel;
    private javax.swing.JTextField LengthOfEachSideJTextField;
    private javax.swing.JLabel MeasureOfInteriorAngleJLabel;
    private javax.swing.JTextField MeasureOfInteriorAngleJTextField;
    private javax.swing.JLabel NumberOfDistinctDiagonalsJLabel;
    private javax.swing.JTextField NumberOfDistinctDiagonalsJTextField;
    private javax.swing.JLabel NumberOfSidesJLabel;
    private javax.swing.JTextField NumberOfSidesJTextField;
    private javax.swing.JLabel PerimeterOfPolygonJLabel;
    private javax.swing.JTextField PerimeterOfPolygonJTextField;
    private javax.swing.JButton PrintJButton;
    private javax.swing.JMenuItem PrintJMenuItem;
    private javax.swing.JButton QuitJButton;
    private javax.swing.JMenuItem QuitJMenuItem;
    private javax.swing.JLabel RegularPlygonsImageJLabel;
    private javax.swing.JLabel RegularPolygonsJLabel;
    // End of variables declaration//GEN-END:variables

    
}
