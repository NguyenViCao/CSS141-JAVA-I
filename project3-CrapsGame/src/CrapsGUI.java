package Project3;

import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*<pre>
* @author           <i>Nguyen Vi Cao</i>
* Project Number    3
* Due date          11/30/2020
*</pre>
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*<pre>
* Class         CrapsGUI
* File          CrapsGUI.java
* Description   Craps game simulator - One of the most popular games of chance 
*               is a dice gam
* @author       <i>Nguyen Vi Cao</i>
* Environment   PC, Windows 10, jdk1.8.0_241, NetBeans 11.3
* Date          11/30/2020
* @version      1.0.0
* History Log:  11/30/2020
*</pre>
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class CrapsGUI extends javax.swing.JFrame 
{
    //class instance variables 
    int total = 0, freq1 = 0, freq2 = 0, freq3 = 0, freq4 = 0, freq5 = 0, freq6 = 0;
    double perc1 = 0.0, perc2 = 0.0, perc3 = 0.0, perc4 = 0.0, perc5 = 0.0, perc6 = 0.0;
    int[] freq = new int[6];
    double[] perc = new double[6];
    Die die1 = new Die(Die.roll());
    Die die2 = new Die(Die.roll());
    final int WON = 0, LOST = 1, CONTINUE = 2;
    boolean firstRoll = true;
    int Sum = 0;
    int Points = 0;
    int gameStatus = CONTINUE;
    int noGamesWon = 0;
    int noGamesLost = 0;
    String pointValue = "";
    int totalGamesPlayed = 0;
    double percGamesWon = 0.0;
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Constructor      CrapsGUI()--default constructor
    * Description      Create a GUI form and displayed it centered with icon and
    *                  RollJButton set as default.
    * @author          <i>Nguyen Vi Cao</i>
    * Date             11/30/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public CrapsGUI() 
    {
        initComponents();   //build the form
        this.getRootPane().setDefaultButton(rollJButton);
        // set icon form
        this.setIconImage(Toolkit.getDefaultToolkit().
        getImage("src/Project3/dice.jpg"));
        // center the form at start
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonsJPanel = new javax.swing.JPanel();
        rollJButton = new javax.swing.JButton();
        StatisticsJButton = new javax.swing.JButton();
        PrintJButton = new javax.swing.JButton();
        ClearJButton = new javax.swing.JButton();
        ExitJButton = new javax.swing.JButton();
        WelcomeJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OutJTextArea = new javax.swing.JTextArea();
        SumJLabel = new javax.swing.JLabel();
        StatusJLabel = new javax.swing.JLabel();
        PointJLabel = new javax.swing.JLabel();
        SumJTextField = new javax.swing.JTextField();
        StatusJTextField = new javax.swing.JTextField();
        PointsJTextField = new javax.swing.JTextField();
        Dice1JLabel = new javax.swing.JLabel();
        Dice2Label = new javax.swing.JLabel();
        die1JLabel = new javax.swing.JLabel();
        die2JLabel = new javax.swing.JLabel();
        CrapsJMenuBar = new javax.swing.JMenuBar();
        FileJMenu = new javax.swing.JMenu();
        ClearJMenuItem = new javax.swing.JMenuItem();
        PrintJMenuItem = new javax.swing.JMenuItem();
        SaveJMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        ExitJMenuItem = new javax.swing.JMenuItem();
        ActionJMenu = new javax.swing.JMenu();
        RollJMenuItem = new javax.swing.JMenuItem();
        StatisticsJMenuItem = new javax.swing.JMenuItem();
        HelpJMenu = new javax.swing.JMenu();
        AboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CRAPS SIMULATOR");
        setResizable(false);

        ButtonsJPanel.setBackground(new java.awt.Color(204, 204, 204));

        rollJButton.setBackground(new java.awt.Color(153, 255, 153));
        rollJButton.setMnemonic('r');
        rollJButton.setText("Roll");
        rollJButton.setToolTipText("Roll the dices");
        rollJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollJButtonActionPerformed(evt);
            }
        });

        StatisticsJButton.setBackground(new java.awt.Color(153, 255, 153));
        StatisticsJButton.setMnemonic('s');
        StatisticsJButton.setText("Statistics");
        StatisticsJButton.setToolTipText("Statistics about the game");
        StatisticsJButton.setEnabled(false);
        StatisticsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatisticsJButtonActionPerformed(evt);
            }
        });

        PrintJButton.setBackground(new java.awt.Color(153, 255, 153));
        PrintJButton.setMnemonic('p');
        PrintJButton.setText("Print");
        PrintJButton.setToolTipText("Print the result of the game");
        PrintJButton.setEnabled(false);
        PrintJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintJButtonActionPerformed(evt);
            }
        });

        ClearJButton.setBackground(new java.awt.Color(153, 255, 153));
        ClearJButton.setMnemonic('c');
        ClearJButton.setText("Clear");
        ClearJButton.setToolTipText("Clear the form");
        ClearJButton.setEnabled(false);
        ClearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearJButtonActionPerformed(evt);
            }
        });

        ExitJButton.setBackground(new java.awt.Color(153, 255, 153));
        ExitJButton.setMnemonic('x');
        ExitJButton.setText("Exit");
        ExitJButton.setToolTipText("Quit the game");
        ExitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ButtonsJPanelLayout = new javax.swing.GroupLayout(ButtonsJPanel);
        ButtonsJPanel.setLayout(ButtonsJPanelLayout);
        ButtonsJPanelLayout.setHorizontalGroup(
            ButtonsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonsJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rollJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatisticsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PrintJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        ButtonsJPanelLayout.setVerticalGroup(
            ButtonsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonsJPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(ButtonsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rollJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StatisticsJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PrintJButton)
                    .addComponent(ClearJButton)
                    .addComponent(ExitJButton)))
        );

        WelcomeJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        WelcomeJLabel.setForeground(new java.awt.Color(153, 0, 0));
        WelcomeJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WelcomeJLabel.setText("Welcome to Craps Game Simulator");

        OutJTextArea.setEditable(false);
        OutJTextArea.setColumns(20);
        OutJTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OutJTextArea.setRows(5);
        jScrollPane1.setViewportView(OutJTextArea);

        SumJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SumJLabel.setText("Sum:");
        SumJLabel.setToolTipText("Sum of the dices");

        StatusJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StatusJLabel.setText("Status:");

        PointJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PointJLabel.setText("Points:");

        SumJTextField.setEditable(false);
        SumJTextField.setBackground(new java.awt.Color(255, 255, 255));
        SumJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SumJTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SumJTextField.setToolTipText("the sum of two dices");
        SumJTextField.setBorder(null);

        StatusJTextField.setEditable(false);
        StatusJTextField.setBackground(new java.awt.Color(255, 255, 255));
        StatusJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StatusJTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        StatusJTextField.setToolTipText("your status on the game");
        StatusJTextField.setBorder(null);

        PointsJTextField.setEditable(false);
        PointsJTextField.setBackground(new java.awt.Color(255, 255, 255));
        PointsJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PointsJTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PointsJTextField.setToolTipText("your points");
        PointsJTextField.setBorder(null);

        Dice1JLabel.setText("Dice1");

        Dice2Label.setText("Dice2");

        die1JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/dice1.png"))); // NOI18N

        die2JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/dice2.png"))); // NOI18N

        FileJMenu.setMnemonic('f');
        FileJMenu.setText("File");

        ClearJMenuItem.setMnemonic('c');
        ClearJMenuItem.setText("Clear");
        ClearJMenuItem.setToolTipText("Clear the form");
        ClearJMenuItem.setEnabled(false);
        ClearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(ClearJMenuItem);

        PrintJMenuItem.setMnemonic('p');
        PrintJMenuItem.setText("Print");
        PrintJMenuItem.setToolTipText("Print the GUI");
        PrintJMenuItem.setEnabled(false);
        PrintJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(PrintJMenuItem);

        SaveJMenuItem.setMnemonic('s');
        SaveJMenuItem.setText("Save");
        SaveJMenuItem.setToolTipText("Save the result of the game");
        SaveJMenuItem.setEnabled(false);
        SaveJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(SaveJMenuItem);
        FileJMenu.add(jSeparator1);

        ExitJMenuItem.setMnemonic('x');
        ExitJMenuItem.setText("Exit");
        ExitJMenuItem.setToolTipText("Quit the game");
        ExitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitJMenuItemActionPerformed(evt);
            }
        });
        FileJMenu.add(ExitJMenuItem);

        CrapsJMenuBar.add(FileJMenu);

        ActionJMenu.setMnemonic('t');
        ActionJMenu.setText("Action");

        RollJMenuItem.setMnemonic('r');
        RollJMenuItem.setText("Roll");
        RollJMenuItem.setToolTipText("Roll the dices");
        RollJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RollJMenuItemActionPerformed(evt);
            }
        });
        ActionJMenu.add(RollJMenuItem);

        StatisticsJMenuItem.setMnemonic('s');
        StatisticsJMenuItem.setText("Statistics");
        StatisticsJMenuItem.setToolTipText("Statistics about the game");
        StatisticsJMenuItem.setEnabled(false);
        ActionJMenu.add(StatisticsJMenuItem);

        CrapsJMenuBar.add(ActionJMenu);

        HelpJMenu.setMnemonic('h');
        HelpJMenu.setText("Help");

        AboutJMenuItem.setMnemonic('a');
        AboutJMenuItem.setText("About");
        AboutJMenuItem.setToolTipText("About the game");
        AboutJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutJMenuItemActionPerformed(evt);
            }
        });
        HelpJMenu.add(AboutJMenuItem);

        CrapsJMenuBar.add(HelpJMenu);

        setJMenuBar(CrapsJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Dice1JLabel)
                        .addGap(47, 47, 47)
                        .addComponent(Dice2Label)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(die1JLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(die2JLabel)))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SumJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(StatusJLabel)
                            .addComponent(PointJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SumJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StatusJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PointsJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ButtonsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(WelcomeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(175, 175, 175))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SumJLabel)
                            .addComponent(SumJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StatusJLabel)
                            .addComponent(StatusJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PointJLabel)
                            .addComponent(PointsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(WelcomeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Dice1JLabel)
                            .addComponent(Dice2Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(die2JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(die1JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addComponent(ButtonsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          PrintJMenuItemActionPerformed()
    *	Description     Print the content of the OutJTextArea
    *	Date            11/30/2020
    *   History Log     11/30/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void PrintJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintJButtonActionPerformed
        try 
        {
            OutJTextArea.print();
        } 
        catch (PrinterException exp) 
        {
            exp.printStackTrace();
        }
    }//GEN-LAST:event_PrintJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          PrintJMenuItemActionPerformed()
    *	Description     Print the GUI.
    *	Date            11/30/2020
    *   History Log     11/30/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void PrintJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintJMenuItemActionPerformed
        PrintUtilities.printComponent(this);
    }//GEN-LAST:event_PrintJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        ExitJButtonActionPerformed()
    * Description   Ends the application.
    * Date          11/30/2020
    * History Log   11/30/2020
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void ExitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitJButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        ExitJMenuItemActionPerformed()
    * Description   Calls the ExitJButtonActionPerformed to end the application
    * Date          11/30/2020
    * History Log   11/30/2020
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void ExitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitJMenuItemActionPerformed
        ExitJButtonActionPerformed(evt);
    }//GEN-LAST:event_ExitJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          ClearJButtonActionPerformed()
    *	Description     Clears the form and resets it to its original state.
    *	Date            11/30/2020
    *   History Log     11/30/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void ClearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearJButtonActionPerformed
        for(int i = 0; i < freq.length; i ++)
            freq[i] = 0;
        for(int i = 0; i < perc.length; i ++)
            perc[i] = 0;
        total = 0;
        noGamesWon = 0;
        noGamesLost = 0;
        totalGamesPlayed = 0;
        percGamesWon = 0;
        OutJTextArea.setText("");
        SumJTextField.setText("");
        StatusJTextField.setText("");
        PointsJTextField.setText("");
        StatisticsJButton.setEnabled(false);
        PrintJButton.setEnabled(false);
        ClearJButton.setEnabled(false);
        ClearJMenuItem.setEnabled(false);
        PrintJMenuItem.setEnabled(false);
        SaveJMenuItem.setEnabled(false);
        StatisticsJMenuItem.setEnabled(false);
    }//GEN-LAST:event_ClearJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        DisplayBillJButtonActionPerformed()
    * Description   Roll the dice as well as calculate the frequency and 
    *               percentage of each faces of the dice.
    * Date          11/30/2020
    * History Log   11/30/2020	
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    * @see          java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void rollJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollJButtonActionPerformed
        for (int i = 0; i < 1; i++)
        {
            total += 2;
            // roll dice
            die1.setSide(Die.roll());
            die2.setSide(Die.roll());
            
            // calculate frequency and percentage
            freq[die1.getSide() - 1]++;
            freq[die2.getSide() - 1]++;
        }
        for ( int i = 0; i < perc.length; i++)
        {
            perc[i] = (double)freq[i]/total;
        }
        
        Sum = die1.getSide() + die2.getSide();
        SumJTextField.setText(String.valueOf(Sum));
        // set image to labels
        setLabel(die1JLabel, "src/Image/", die1.getSide());
        setLabel(die2JLabel, "src/Image/", die2.getSide());
        
        if (firstRoll)
        {
            if (Sum == 7 || Sum == 11)
            {
                firstRoll = true;
                gameStatus = WON;
                Points = 0;
                noGamesWon = noGamesWon + 1;
                StatusJTextField.setText("You win!!");
            }
            else if (Sum == 2 || Sum == 3 || Sum == 12)
            {    
                firstRoll = true;
                gameStatus = LOST;
                Points = 0;
                noGamesLost = noGamesLost + 1;
                StatusJTextField.setText("Craps, you lose!");
            }
            else
            {
                firstRoll = false;                
                gameStatus = CONTINUE;
                Points = Sum;
                pointValue = String.valueOf(Points);
                StatusJTextField.setText("keep rolling!");
                PointsJTextField.setText(String.valueOf(pointValue));
            }
        }
        else
        {
            if (Sum == Points)
            {
                firstRoll = true;                
                gameStatus = WON;
                noGamesWon = noGamesWon + 1;
                StatusJTextField.setText("You win!!");
            }
            else if (Sum == 7)
            {
                firstRoll = true;
                gameStatus = LOST;
                noGamesLost = noGamesLost + 1;
                StatusJTextField.setText("You lose!");
            }
            if (noGamesLost==2)
            JOptionPane.showMessageDialog(null,
            "You are not going to give up right now, aren't you?",
            "Don't Give Up!!!", JOptionPane.INFORMATION_MESSAGE);
        
            if (noGamesWon==5)
            JOptionPane.showMessageDialog(null,
            "Looks like it's your lucky day",
            "We are out of money!!", JOptionPane.INFORMATION_MESSAGE);
        }

        totalGamesPlayed = noGamesWon + noGamesLost;
        percGamesWon = (double)noGamesWon/totalGamesPlayed*100;
        if (totalGamesPlayed>=1)
        {    
            StatisticsJButton.setEnabled(true);
            PrintJButton.setEnabled(true);
            ClearJButton.setEnabled(true);
            ClearJMenuItem.setEnabled(true);
            PrintJMenuItem.setEnabled(true);
            SaveJMenuItem.setEnabled(true);
            StatisticsJMenuItem.setEnabled(true);
        }
        
        //display result
        displayResults();
    }//GEN-LAST:event_rollJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          setLabel()
    *	Description     Method to set the correct image on the given label.
    *   @param          label Jlabel
    *   @param          folder String
    *   @param          num int
    *   @see            java.awt.event.ActionEvent
    *	Date            11/30/2020
    *   History Log     11/30/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public void setLabel(JLabel label, String folder, int num)
    {
        String image = folder + "dice" + num + ".png";
        label.setIcon(new ImageIcon(image));
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        RollJMenuItemActionPerformed()
    * Description   Calls the RollJButtonActionPerformed to roll the dice
    * Date          11/30/2020
    * History Log   11/30/2020
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void RollJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RollJMenuItemActionPerformed
        rollJButtonActionPerformed(evt);
    }//GEN-LAST:event_RollJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        AboutJMenuItemActionPerformed()
    * Description   Creates and shows the About form
    * Date          11/30/2020
    * History Log   11/30/2020	
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    * @see          java.awt.event.ActionEvent
    * @see          java.text.DecimalFormat
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void AboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutJMenuItemActionPerformed
        About myAbout = new About(this, true);
        myAbout.setVisible(true);
    }//GEN-LAST:event_AboutJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        StatisticsJButtonActionPerformed()
    * Description   Display that statistic aspect of the player. How many wins 
    *               and loses that the player has.
    * Date          11/30/2020
    * History Log   11/30/2020	
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    * @see          java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void StatisticsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatisticsJButtonActionPerformed
        StringBuffer output = new StringBuffer ("Number of games played = " + totalGamesPlayed + '\n' +
                                                "Number of games won = " + noGamesWon + '\n' +
                                                "Number of games lost = " + noGamesLost + '\n' +
                                                "Percentage games won = " + percGamesWon + "%");
        OutJTextArea.setText(output.toString());    
    }//GEN-LAST:event_StatisticsJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        SaveJMenuItemActionPerformed()
    * Description   Saves the content of the OutJTextArea to an external file 
    *               with the player.
    * Date          11/30/2020
    * History Log   11/30/2020	
    * @author       <i>Nguyen Vi Cao</i>	
    * @param        evt java.awt.event.ActionEvent
    * @see          java.awt.event.ActionEvent
    * @see          java.io.FileWriter  
    * @see          java.io.PrintWriter
    * @see          java.io.IOException 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void SaveJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveJMenuItemActionPerformed
        try
        {
            FileWriter filePointer = new FileWriter("src/Project3/Statistics.txt", false);
            PrintWriter output = new PrintWriter(filePointer, true);
            output.write(OutJTextArea.getText());
            output.close();
        }
        catch (IOException exp)
        {
            exp.printStackTrace();
        }
    }//GEN-LAST:event_SaveJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          ClearJMenuItemActionPerformed()
    *	Description     Calls the ClearJButtonActionPerformed event handler to
    *                   clear the form and reset it to its original state.
    *	Date            11/30/2020
    *   History Log     11/30/2020
    *	@author         <i>Nguyen Vi Cao</i>	
    *	@param		evt java.awt.event.ActionEvent
    *   @see            java.awt.event.ActionEvent
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void ClearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearJMenuItemActionPerformed
        ClearJButton.doClick();
    }//GEN-LAST:event_ClearJMenuItemActionPerformed
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method       displayResult()
    * Description  method to display results.
    * @see         java.awt.event.ActionEvent
    * @author      <i>Nguyen Vi Cao</i>
    * Date         11/30/2020
    * History Log  11/30/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void displayResults()
    {
        DecimalFormat percent = new DecimalFormat("#,##0.00%");
        StringBuffer output = new StringBuffer ("Face              " + "Frequency                 " + "Percent\n");
        for (int i = 0; i < freq.length; i++)
        {
            output.append("   " +(i + 1) + "                    " + freq[i] + "\t       " + 
                    percent.format(perc[i]) + "\n");
        }
        OutJTextArea.setText(output.toString());
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method       main()
    * Description  show the splash screen and call the constructor to create
    *              an instance of the form
    * @param       args are the command line strings
    * @author      <i>Nguyen Vi Cao</i>
    * Date         11/30/2020
    * History Log  11/30/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrapsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrapsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrapsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrapsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        Splash mySplash = new Splash(3500);
        mySplash.showSplash();
        CrapsGUI myCrapsGUI = new CrapsGUI();
        myCrapsGUI.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrapsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutJMenuItem;
    private javax.swing.JMenu ActionJMenu;
    private javax.swing.JPanel ButtonsJPanel;
    private javax.swing.JButton ClearJButton;
    private javax.swing.JMenuItem ClearJMenuItem;
    private javax.swing.JMenuBar CrapsJMenuBar;
    private javax.swing.JLabel Dice1JLabel;
    private javax.swing.JLabel Dice2Label;
    private javax.swing.JButton ExitJButton;
    private javax.swing.JMenuItem ExitJMenuItem;
    private javax.swing.JMenu FileJMenu;
    private javax.swing.JMenu HelpJMenu;
    private javax.swing.JTextArea OutJTextArea;
    private javax.swing.JLabel PointJLabel;
    private javax.swing.JTextField PointsJTextField;
    private javax.swing.JButton PrintJButton;
    private javax.swing.JMenuItem PrintJMenuItem;
    private javax.swing.JMenuItem RollJMenuItem;
    private javax.swing.JMenuItem SaveJMenuItem;
    private javax.swing.JButton StatisticsJButton;
    private javax.swing.JMenuItem StatisticsJMenuItem;
    private javax.swing.JLabel StatusJLabel;
    private javax.swing.JTextField StatusJTextField;
    private javax.swing.JLabel SumJLabel;
    private javax.swing.JTextField SumJTextField;
    private javax.swing.JLabel WelcomeJLabel;
    private javax.swing.JLabel die1JLabel;
    private javax.swing.JLabel die2JLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton rollJButton;
    // End of variables declaration//GEN-END:variables
}
